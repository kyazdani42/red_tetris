// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing checkbox component test the function 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UNDEFINED>
    <label>
      displayName
    </label>
    <input
      checked={true}
      onChange={[Function]}
      type="checkbox"
    />
  </UNDEFINED>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <label>
          displayName
        </label>,
        <input
          checked={true}
          onChange={[Function]}
          type="checkbox"
        />,
      ],
      "forwardedComponent": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-EHOje",
          "isStatic": true,
          "rules": Array [
            "
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  color: #fff;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-EHOje",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
      "forwardedRef": null,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "displayName",
        },
        "ref": null,
        "rendered": "displayName",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "checked": true,
          "onChange": [Function],
          "type": "checkbox",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <label>
            displayName
          </label>,
          <input
            checked={true}
            onChange={[Function]}
            type="checkbox"
          />,
        ],
        "forwardedComponent": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-EHOje",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  color: #fff;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-EHOje",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
        "forwardedRef": null,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "displayName",
          },
          "ref": null,
          "rendered": "displayName",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "checked": true,
            "onChange": [Function],
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`testing the options component smoke tests the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    dispatchSetOptions={[Function]}
    options={
      Object {
        "invisible": false,
        "mirror": false,
        "reverse": false,
        "speed": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <UNDEFINED>
          <label>
            invisible
          </label>
          <input
            checked={false}
            onChange={[Function]}
            type="checkbox"
          />
        </UNDEFINED>,
        <UNDEFINED>
          <label>
            mirror
          </label>
          <input
            checked={false}
            onChange={[Function]}
            type="checkbox"
          />
        </UNDEFINED>,
        <UNDEFINED>
          <label>
            reverse
          </label>
          <input
            checked={false}
            onChange={[Function]}
            type="checkbox"
          />
        </UNDEFINED>,
        <UNDEFINED>
          <label>
            disable speed
          </label>
          <input
            checked={false}
            onChange={[Function]}
            type="checkbox"
          />
        </UNDEFINED>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <label>
              invisible
            </label>,
            <input
              checked={false}
              onChange={[Function]}
              type="checkbox"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "invisible",
            },
            "ref": null,
            "rendered": "invisible",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "checked": false,
              "onChange": [Function],
              "type": "checkbox",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-EHOje",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  color: #fff;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-EHOje",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <label>
              mirror
            </label>,
            <input
              checked={false}
              onChange={[Function]}
              type="checkbox"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "mirror",
            },
            "ref": null,
            "rendered": "mirror",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "checked": false,
              "onChange": [Function],
              "type": "checkbox",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-EHOje",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  color: #fff;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-EHOje",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <label>
              reverse
            </label>,
            <input
              checked={false}
              onChange={[Function]}
              type="checkbox"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "reverse",
            },
            "ref": null,
            "rendered": "reverse",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "checked": false,
              "onChange": [Function],
              "type": "checkbox",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-EHOje",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  color: #fff;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-EHOje",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <label>
              disable speed
            </label>,
            <input
              checked={false}
              onChange={[Function]}
              type="checkbox"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "disable speed",
            },
            "ref": null,
            "rendered": "disable speed",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "checked": false,
              "onChange": [Function],
              "type": "checkbox",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-EHOje",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  color: #fff;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-EHOje",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-ifAKCX",
        "isStatic": true,
        "rules": Array [
          "
  display: flex;
  background-color: rgba(0,0,0,0.5);
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  height: 130px;
  width: 140px;
  position: absolute;
  top: 63%;
  left: 50%;
  margin-left: -70px;
  margin-top: -50px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-ifAKCX",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <UNDEFINED>
            <label>
              invisible
            </label>
            <input
              checked={false}
              onChange={[Function]}
              type="checkbox"
            />
          </UNDEFINED>,
          <UNDEFINED>
            <label>
              mirror
            </label>
            <input
              checked={false}
              onChange={[Function]}
              type="checkbox"
            />
          </UNDEFINED>,
          <UNDEFINED>
            <label>
              reverse
            </label>
            <input
              checked={false}
              onChange={[Function]}
              type="checkbox"
            />
          </UNDEFINED>,
          <UNDEFINED>
            <label>
              disable speed
            </label>
            <input
              checked={false}
              onChange={[Function]}
              type="checkbox"
            />
          </UNDEFINED>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label>
                invisible
              </label>,
              <input
                checked={false}
                onChange={[Function]}
                type="checkbox"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "invisible",
              },
              "ref": null,
              "rendered": "invisible",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "checked": false,
                "onChange": [Function],
                "type": "checkbox",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-EHOje",
              "isStatic": true,
              "rules": Array [
                "
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  color: #fff;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-EHOje",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label>
                mirror
              </label>,
              <input
                checked={false}
                onChange={[Function]}
                type="checkbox"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "mirror",
              },
              "ref": null,
              "rendered": "mirror",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "checked": false,
                "onChange": [Function],
                "type": "checkbox",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-EHOje",
              "isStatic": true,
              "rules": Array [
                "
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  color: #fff;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-EHOje",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label>
                reverse
              </label>,
              <input
                checked={false}
                onChange={[Function]}
                type="checkbox"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "reverse",
              },
              "ref": null,
              "rendered": "reverse",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "checked": false,
                "onChange": [Function],
                "type": "checkbox",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-EHOje",
              "isStatic": true,
              "rules": Array [
                "
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  color: #fff;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-EHOje",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label>
                disable speed
              </label>,
              <input
                checked={false}
                onChange={[Function]}
                type="checkbox"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "disable speed",
              },
              "ref": null,
              "rendered": "disable speed",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "checked": false,
                "onChange": [Function],
                "type": "checkbox",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-EHOje",
              "isStatic": true,
              "rules": Array [
                "
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  color: #fff;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-EHOje",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-ifAKCX",
          "isStatic": true,
          "rules": Array [
            "
  display: flex;
  background-color: rgba(0,0,0,0.5);
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  height: 130px;
  width: 140px;
  position: absolute;
  top: 63%;
  left: 50%;
  margin-left: -70px;
  margin-top: -50px;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-ifAKCX",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
